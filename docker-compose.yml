services:
  # Servicio de base de datos SQL Server
  sql-server:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: YourStrong@Passw0rd
      MSSQL_PID: Express
    ports:
      - "1433:1433"
    volumes:
      - sql_data:/var/opt/mssql
    networks:
      - basketball-network
    healthcheck:
      test: ["CMD", "/opt/mssql-tools18/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "YourStrong@Passw0rd", "-C", "-Q", "SELECT 1"]
      interval: 30s
      retries: 5
      start_period: 60s
      timeout: 10s

  # Servicio de la API de Basketball
  basketball-api:
    build:
      context: ./BasketballScoreboardAPI
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Server=sql-server,1433;Database=BasketballScoreboardDB;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;"
    ports:
      - "5163:8080"
    depends_on:
      sql-server:
        condition: service_healthy
    networks:
      - basketball-network

  # Servicio del frontend Angular
  basketball-frontend:
    build:
      context: ./basketball-scoreboard
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - basketball-api
    networks:
      - basketball-network

  # Servicio de reportes Python
  report-service:
    build:
      context: ./report-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      sql-server:
        condition: service_healthy
    environment:
      DB_SERVER: sql-server
      DB_NAME: BasketballScoreboardDB
      DB_USER: sa
      DB_PASSWORD: YourStrong@Passw0rd
      DB_PORT: 1433
      JWT_SECRET: your-super-secret-key-for-jwt-tokens-basketball-2024
    networks:
      - basketball-network
    volumes:
      - ./report-service/temp:/tmp/reports

networks:
  basketball-network:
    driver: bridge

volumes:
  sql_data:
